import streamlit as st
import os
import subprocess

st.set_page_config(layout="wide")
st.title("üß™ PocketMaster 1.51 ‚Äî –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")

# --- –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ ---
mode = st.selectbox("–í—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã", ["–õ–æ–∫–∞–ª—å–Ω–∞—è –ø–∞–ø–∫–∞ (1)", "UniProt ID (2)", "PDB ID ‚Üí UniProt (3)"])
mode_map = {"–õ–æ–∫–∞–ª—å–Ω–∞—è –ø–∞–ø–∫–∞ (1)": "1", "UniProt ID (2)": "2", "PDB ID ‚Üí UniProt (3)": "3"}
mode_val = mode_map[mode]

# --- –í–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ---
folder_path = st.text_input("–ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å PDB (–¥–ª—è —Ä–µ–∂–∏–º–∞ 1)", value=os.getcwd())
uniprot_id = st.text_input("UniProt ID (–¥–ª—è —Ä–µ–∂–∏–º–∞ 2)", value="")
pdb_id = st.text_input("PDB ID (–¥–ª—è —Ä–µ–∂–∏–º–∞ 3)", value="")

config_path = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç—å JSON-–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é", type=["json"])

run_button = st.button("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∞–ª–∏–∑")

# --- –ó–∞–ø—É—Å–∫ ---
if run_button:
    with st.spinner("–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞..."):

        config_file = "temp_config.json"

        # –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω –∫–æ–Ω—Ñ–∏–≥ ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
        if config_path is not None:
            with open(config_file, "wb") as f:
                f.write(config_path.read())
        else:
            # –∏–Ω–∞—á–µ ‚Äî —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π config
            import json
            config_data = {
                "mode": int(mode_val),
                "folder_path": folder_path if mode_val == "1" else None,
                "uniprot_id": uniprot_id if mode_val == "2" else None,
                "pdb_id": pdb_id if mode_val == "3" else None
            }
            with open(config_file, "w") as f:
                json.dump(config_data, f, indent=2)

        # –≤—ã–∑–æ–≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
        result = subprocess.run(
            ["python", "PocketMaster1.51t.py", "--config", config_file],
            capture_output=True,
            text=True
        )

        st.subheader("–õ–æ–≥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è")
        st.code(result.stdout + "\n" + result.stderr)

        if result.returncode == 0:
            st.success("–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω ‚úÖ")
            st.markdown(f"üìÅ –ü—Ä–æ–≤–µ—Ä—å –ø–∞–ø–∫—É: `{folder_path}/aligned_output/`")
        else:
            st.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞.")
